devices_off:
  alias: "Devices Auto Off"
  sequence:
    - service: media_player.turn_off
      data:
        entity_id: media_player.pandora
    - service: media_player.turn_off
      data:
        entity_id: media_player.living_room_tv
    - service: media_player.turn_off
      data:
        entity_id: media_player.bed_room
    - service: media_player.turn_off
      data:
        entity_id: media_player.mpd
    - service: media_player.turn_off
      data:
        entity_id: media_player.roku2_brayden
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermostat_heating_1
        temperature: '{{ float(states.input_number.tempature_night.state) }}'

good_night:
  alias: "Good Night"
  sequence:
    - service: light.turn_off
      entity_id: group.house_lights
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermostat_heating_1
        temperature: '{{ float(states.input_number.tempature_night.state) }}'

home_away:
  alias: "Away Mode"
  sequence:
    - service: scene.turn_on
      entity_id: scene.away_lights
    - service: media_player.turn_off
      data:
        entity_id: media_player.mpd
    - service: media_player.turn_off
      data:
        entity_id: media_player.living_room_tv
    - service: media_player.turn_off
      data:
        entity_id: media_player.roku2__brayden
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermostat_heating_1
        temperature: '{{ float(states.input_number.tempature_away.state) }}'
    - service: notify.homepird3scom_html5_robert_phone
      data:
        message: 'Home Away Mode on at {{now().strftime("%H:%M:%S")}}'

home_occupied:
  alias: "Occupied Mode"
  sequence:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermostat_heating_1
        temperature: '{{ float(states.input_number.tempature_home.state) }}'
    - service: notify.homepird3scom_html5_robert_phone
      data:
        message: 'Home Away Mode off at {{now().strftime("%H:%M:%S")}}'
kitchen_lights:
  alias: "Turn off kitchen lights after 30 minutes"
  sequence:
    - service: light.turn_on
      data_template:
        entity_id: light.kitchen_table_light_level
        brightness: "{{ states.sensor.time_brightness.state|int }}"
    - delay: '00:30:00'
    - service: light.turn_off
      data:
        entity_id: light.kitchen_table_light_level

quiet_off:
  alias: "Quiet Time Off"
  sequence:
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.kids_room1.attributes.node_id }}",
        "parameter": 3,
        "value": 'Occupancy'
        }
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.half_bathroom.attributes.node_id }}",
        "parameter": 3,
        "value": 'Occupancy'
        }
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.front_door_light.attributes.node_id }}",
        "parameter": 3,
        "value": 'Occupancy'
        }
quiet_on:
  alias: "Quiet Time On"
  sequence:
    # Brayden's Room 20 - Disable montion light
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.kids_room1.attributes.node_id }}",
        "parameter": 3,
        "value": 'Vacancy'
        }
    # half bathroom 12
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.half_bathroom.attributes.node_id }}",
        "parameter": 3,
        "value": 'Vacancy'
        }
     # front door hall light 18
    - service: zwave.set_config_parameter
      data_template: {
        "node_id": "{{ states.zwave.front_door_light.attributes.node_id }}",
        "parameter": 3,
        "value": 'Vacancy'
        }
refresh_devices:
  sequence:
  - service: mqtt.publish
    data:
      topic: "owntracks/robert/phone/cmd"
      payload_template: '{"_type":"cmd","action":"reportLocation"}'
wake_up:
  sequence:
    - service: climate.set_temperature
      data_template:
        entity_id: climate.thermostat_heating_1
        temperature: '{{ float(states.input_number.tempature_home.state) }}'
    - service: light.turn_on
      data_template:
        entity_id: light.stairs_light_level
    - delay: '00:00:04'
    - service: light.turn_on
      data_template:
        entity_id: light.stairs_light_level
        brightness: '{{ states.sensor.time_brightness.state|int }}'
    - service: notify.homepird3scom_html5_robert_phone
      data:
        message: "Good morning! Today: {{ states('sensor.pws_weather_1d') }}, tempatures ranging {{ states('sensor.pws_temp_low_1d_f') }} - {{ states('sensor.pws_temp_high_1d_f') }}°f  Now: {{ states('sensor.pws_temp_f') }}°f"

light_flash:
  alias: Light flash on
  sequence:
    - service: homeassistant.turn_on
      data:
        entity_id: light.stairs_light_level
    - delay: '00:00:01'
    - service: homeassistant.turn_off
      data:
        entity_id: light.stairs_light_level
    - service: script.turn_on
      data:
        entity_id: script.light_flash

